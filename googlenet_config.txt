imds = imageDatastore('C:\Users\soymarwin\Desktop\results\alexnet\earset\earset','IncludeSubfolders',true,'LabelSource','foldernames');


[imdsTrain,imdsValidation] = splitEachLabel(imds,0.8,'randomized');

net = inceptionresnetv2;

numClasses = numel(categories(imdsTrain.Labels));
lgraph = layerGraph(net);

newFCLayer = fullyConnectedLayer(numClasses,'Name','new_fc','WeightLearnRateFactor',20,'BiasLearnRateFactor',20);
lgraph = replaceLayer(lgraph,'predictions',newFCLayer);

newSoftmaxLayer = softmaxLayer('Name','proba');
lgraph = replaceLayer(lgraph,'predictions_softmax',newSoftmaxLayer);

newClassLayer = classificationLayer('Name','new_classoutput');
lgraph = replaceLayer(lgraph,'ClassificationLayer_predictions',newClassLayer);

pixelRange = [-30 30];

inputSize = net.Layers(1).InputSize;

imageAugmenter = imageDataAugmenter('RandXReflection',true,'RandXTranslation',pixelRange,'RandYTranslation',pixelRange);

augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain,'DataAugmentation',imageAugmenter);

augimdsValidation = augmentedImageDatastore(inputSize(1:2),imdsValidation);

options = trainingOptions('adam','MiniBatchSize',5,'MaxEpochs',30,'InitialLearnRate',1e-5,'Shuffle','every-epoch','ValidationData',augimdsValidation,'ValidationFrequency',10,'Verbose',false,'Plots','training-progress','LearnRateSchedule','piecewise');

netTransfer = trainNetwork(augimdsTrain,lgraph,options);